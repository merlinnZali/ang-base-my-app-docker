node(){
    stage('Cloning Git') {
        checkout scm
    }
        
    stage('Install dependencies') {
        nodejs('nodejs') {
            sh 'npm install'
            echo "Modules installed"
        }
        
    }
    stage('Build') {
        nodejs('nodejs') {
            sh 'npm run build'
            echo "Build completed"
        }
        
    }

    stage('Package Build') {
        // zip create verbose file will zip the entire path/file not only the file
        sh "tar -zcvf bundle.tar.gz build/my-app-docker/"
    }

    stage('Artifacts Creation') {
        fingerprint 'bundle.tar.gz'
        archiveArtifacts 'bundle.tar.gz'
        echo "Artifacts created"
    }

    stage('Stash changes') {
        stash allowEmpty: true, includes: 'bundle.tar.gz', name: 'buildArtifacts'
    }

    stage('Deploy') {
        echo 'Unstash'
        unstash 'buildArtifacts'
        echo 'Artifacts copied'

        echo 'Copy'
        // will copy then unzip, result => /var/www/merlino/build/my-app-docker/code+index file
        //sh "yes | sudo cp -R bundle.tar.gz /var/www/html && cd /var/www/html && sudo tar -xvf bundle.tar.gz"
        //sh "yes | sudo cp -R bundle.tar.gz /var/www/merlino && cd /var/www/merlino && sudo tar -xvf bundle.tar.gz"
        echo 'Copy completed'
    }
}

// For that we need to use the APP_BASE_HREF or DEPLOY_URL
// APP_BASE_HREF => /build/my-app-docker/

// Also change the appache or nginx base path to /var/www/merlino/build/my-app-docker/